version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.3

base_image: &base_image
  hashicorp/terraform:0.12.31

working_directory: &working_directory
  ~/example

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  environment:
    BASH_ENV: /root/.bashrc

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
    restore_cache:
      key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

commands: &set_terraform_environment
  aws-oidc-setup:
    description: Setup AWS auth using OIDC token
    parameters:
      aws-role-arn:
        type: string
        default: hello
    steps:
      - run:
          name: Get short-term credentials
          command: |
            cd && touch $BASH_ENV
            if [ "$CIRCLE_BRANCH" == "circleci_terraform" ]; then
              mkdir .aws && cd .aws && touch credentials
              STS=$(aws sts assume-role-with-web-identity --role-arn arn:aws:iam::713463347743:role/sre-circleci-job --role-session-name "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}" --web-identity-token "${CIRCLE_OIDC_TOKEN}" --duration-seconds 900 --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' --output text)
            fi

terraform_init: &terraform_init
      run:
        name: terraform init
        command: |
          source $BASH_ENV
          cd terraform-root-aws/$TERRAFORM_ENVIRONMENT
          terraform init

apply_job: &apply_job
  <<: *default_config
  steps:
    - *restore_repo
    - aws-oidc-setup
    - *terraform_init
    - attach_workspace:
        at: *working_directory
    - run:
        name: terraform apply
        command: |
          source $BASH_ENV
          cd terraform-root-aws/$TERRAFORM_ENVIRONMENT
          terraform apply --auto-approve ../../terraform.plan

jobs:
  build:
    <<: *default_config
    resource_class: xlarge
    steps:
      - checkout
      - aws-oidc-setup
      - run:
          name: terraform fmt
          command: |
            source $BASH_ENV
            cd terraform-root-aws/$TERRAFORM_ENVIRONMENT

            if [ $(terraform fmt | grep -v .terraform | tee fmt_result.txt | wc -l) -gt 0 ]; then
              echo "Format of this terraform files is not appropiate:"
              echo

              cat fmt_result.txt
              rm fmt_result.txt
              git checkout -- .

              echo
              echo "Please run terraform fmt"

              exit 1
            fi
      - *save_repo

  plan:
    <<: *default_config
    steps:
      - *restore_repo
      - aws-oidc-setup
      - *terraform_init
      - run:
          name: terraform plan
          command: |
            source $BASH_ENV
            cd terraform-root-aws/$TERRAFORM_ENVIRONMENT
            terraform plan -out=../../terraform.plan
      - persist_to_workspace:
          root: *working_directory
          paths:
            - terraform.plan

  apply:
    <<: *apply_job
  apply-with-approval:
    <<: *apply_job

workflows:
  build_plan_approve_apply:
    jobs:
      - build
      - plan:
          requires:
            - build
          filters:
            branches:
              only:
              - main
              - staging
              - dev
      - approve:
          type: approval
          requires:
            - plan
          filters:
            branches:
              only: master
      - apply-with-approval:
          requires:
            - approve
          filters:
            branches:
              only: master
      - apply:
          requires:
            - plan
          filters:
            branches:
              only: 
              - staging
              - dev