import { Job } from '../../Job';
import { Workflow } from '../exports/Workflow';
import { WorkflowJobAbstract } from '../exports/WorkflowJobAbstract';
/**
 * Parse a workflow's job reference.
 * Each job referenced by a workflow job must exist in the jobs list.
 * @param name - name of the workflow job.
 * @param workflowJobIn - the workflow job object to be parsed.
 * @param jobs - a list of reference jobs to be used when parsing steps.
 * @returns A workflow job.
 * @throws Error if the workflow job's reference is not in the job list.
 */
export declare function parseWorkflowJob(name: string, workflowJobIn: unknown, jobs: Job[]): WorkflowJobAbstract;
/**
 * Parse a single workflow.
 * @param name - name of the workflow.
 * @param workflowIn - the workflow to be parsed.
 * @param jobs - a list of reference jobs to be used when parsing workflow jobs.
 * @returns A workflow.
 * @throws Error if the workflow is not valid.
 */
export declare function parseWorkflow(name: string, workflowIn: unknown, jobs: Job[]): Workflow;
/**
 * Parse a config's list of workflows.
 * @param workflowIn - the workflow to be parsed.
 * @param jobs - a list of reference jobs to be used when parsing workflow jobs.
 * @returns A list of workflow.
 * @throws Error if any workflow fails to parse.
 */
export declare function parseWorkflowList(workflowsIn: unknown, jobs: Job[]): Workflow[];
//# sourceMappingURL=index.d.ts.map