import { AnyExecutor } from '../../Job/types/Job.types';
import { ReusableExecutor } from '../exports/ReusableExecutor';
import { UnknownExecutableShape } from '../types/Executor.types';
import { ExecutableProperties } from '../types/ExecutorParameters.types';
/**
 * Helper function to extract ExecutableProperties from an executable.
 */
export declare function extractExecutableProps(executable: UnknownExecutableShape): ExecutableProperties;
/**
 * Parse executor from an executable object, such as a job.
 * @param executableIn - The executable object to parse.
 * @param reusableExecutors - The reusable executors reference to use.
 * @returns An executor instance of the determined type.
 * @throws Error if a valid executor type is not found on the object.
 */
export declare function parseExecutor(executableIn: unknown, reusableExecutors?: ReusableExecutor[]): AnyExecutor;
/**
 * Parses a config's list of reusable executors.
 * @param executorListIn - The executor list to parse.
 * @returns An array of reusable executors.
 * @throws Error if a reusable executor is not able to be parsed.
 */
export declare function parseReusableExecutors(executorListIn: unknown): ReusableExecutor[];
export declare function parseReusableExecutor(name: string, executableIn: unknown): ReusableExecutor;
//# sourceMappingURL=index.d.ts.map